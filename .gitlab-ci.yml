image: $CI_REGISTRY/images/build-ci

stages:
  - test
  - publish-s3

docs:
  stage: test
  image: $CI_REGISTRY/images/golang-ci:1.14.9
  script:
    - echo "Making sure docs are updated"
    - make docs
    - if [[ -n $(git status --porcelain) ]]; then echo "Please update the docs using make docs"; exit 1; fi

lint:
  stage: test
  image: golangci/golangci-lint:v1.25.1
  script:
    - echo "Installing mattermost-govet"
    - GO111MODULE=off go get -u github.com/mattermost/mattermost-govet
    - make check

checkout-server:
  stage: test
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)

    - echo "$SSH_PRIVATE_KEY_GITLAB" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $CI_SERVER_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - cd ..
    - ls -al
    - git clone -b $CI_COMMIT_REF_NAME git@$CI_SERVER_HOST:mirrors/core/mattermost-server.git || git clone -b master git@$CI_SERVER_HOST:mirrors/core/mattermost-server.git
  artifacts:
    paths:
      - ../mattermost-server
    expire_in: 3 hours

test:
  stage: test
  image: $CI_REGISTRY/images/docker-ci
  tags:
    - docker
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
  script:
    - cd ..
    - ls -al
    - docker-compose version
    - cd mattermost-server/build
    - docker-compose --no-ansi run --rm start_dependencies
    - cat ../tests/test-data.ldif | docker-compose --no-ansi exec -T openldap bash -c 'ldapadd -x -D "cn=admin,dc=mm,dc=test,dc=com" -w mostest';
    - docker-compose --no-ansi exec -T minio sh -c 'mkdir -p /data/mattermost-test';
    - docker-compose --no-ansi ps
    - sleep 5
    - docker run --rm --net circleci_mm-test appropriate/curl:latest sh -c "until curl --max-time 5 --output - http://mysql:3306; do echo waiting for mysql; sleep 5; done;"
    - docker run --rm --net circleci_mm-test appropriate/curl:latest sh -c "until curl --max-time 5 --output - http://elasticsearch:9200; do echo waiting for elasticsearch; sleep 5; done;"
  dependencies:
    - checkout-server
