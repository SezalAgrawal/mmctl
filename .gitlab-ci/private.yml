publish-s3:
  stage: publish
  image: $CI_REGISTRY/images/aws-ci:1.0.2
  variables:
    AWS_DEFAULT_REGION: us-east-1
    BUCKET: releasetest.mattermost.com
    DISTRIBUTION: E38T4CYCA0KCH8
  script:
    # remove v. e.g.: v5.28 -> 5.28
    - if [[ $CI_COMMIT_REF_NAME =~ /^v/ ]]; then BUCKET_PATH=${CI_COMMIT_REF_NAME#v}; else BUCKET_PATH=$CI_COMMIT_REF_NAME; fi
    - aws --version
    - aws s3 ls
    - aws s3 cp mmctl/build s3://$BUCKET/$BUCKET_PATH --recursive
#    - ID=$(aws cloudfront create-invalidation --distribution-id $DISTRIBUTION --paths "/$BUCKET_PATH" | jq -r '.Invalidation.Id')
#    - aws configure set preview.cloudfront true
#    - aws cloudfront wait invalidation-completed --id $ID --distribution-id $DISTRIBUTION
  dependencies:
    - docs
    - coverage
    - lint
    - test
    - build
  rules:
    - if: '$CI_COMMIT_REF_NAME == "gitlab"' #TODO change to master
    - if: '$CI_COMMIT_REF_NAME =~ /^v.*\d/' # release
    - if: '$CI_COMMIT_REF_NAME =~ /^v.*\D{3,}/' # -rc
    - if: '$CI_COMMIT_REF_NAME =~ /^release-/'

publish-github-master:
  stage: publish
  image: $CI_REGISTRY/images/ghr-ci:v0.13.0
  script:
    - ghr --version
    - ghr -prerelease -draft -t ${GITHUB_TOKEN} -u ${GITHUB_USERNAME} -r mattermost/mmctl -c ${CI_COMMIT_SHA} -delete ${CI_COMMIT_TAG} build
  dependencies:
    - docs
    - coverage
    - lint
    - test
    - build
  rules:
    - if: '$CI_COMMIT_REF_NAME == "gitlab"' #TODO - if: '$CI_COMMIT_REF_NAME =~ /^v.*\D{3,}/' # -rc

publish-github-release:
  stage: publish
  image: $CI_REGISTRY/images/ghr-ci:v0.13.0
  script:
    - ghr --version
    - ghr -t ${GITHUB_TOKEN} -u ${GITHUB_USERNAME} -r mattermost/mmctl  -c ${CI_COMMIT_SHA} -delete ${CI_COMMIT_TAG} build
  dependencies:
    - docs
    - coverage
    - lint
    - test
    - build
  rules:
    - if: '$CI_COMMIT_REF_NAME =~ /^v.*\d/' # release
